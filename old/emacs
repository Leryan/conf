;; Make emacs a bit faster by tuning GC: https://github.com/lewang/flx#gc-optimization
(setq gc-cons-threshold 104857600)

;; INSTALL PACKAGES
;; --------------------------------------

(require 'package)

(add-to-list 'package-archives
       '("melpa" . "http://melpa.org/packages/") t)

(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents))

(defvar myPackages
  '(better-defaults
    ssh
    web-mode
    quickrun
    elpy
    flycheck
    ac-php
    php-mode
    company
    company-quickhelp
    company-c-headers
    company-php
    py-autopep8
    material-theme
    puppet-mode
    yaml-mode
    rust-mode
    ruby-mode
    markdown-mode
    elixir-mode
    alchemist
    neotree
    robe
    projectile
    magit
    helm
    helm-company
    multiple-cursors))

(mapc #'(lambda (package)
    (unless (package-installed-p package)
      (package-install package)))
      myPackages)
(require 'helm-config)
(require 'py-autopep8)
(require 'yaml-mode)
(require 'alchemist)
(require 'quickrun)
(require 'cl)
(require 'php-mode)
(require 'neotree)
(require 'ruby-mode)
(require 'multiple-cursors)

(autoload 'markdown-mode "markdown-mode.el" "Major mode for editing Markdown files" t)
(setq auto-mode-alist (cons '("\.md" . markdown-mode) auto-mode-alist))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages (quote (magit material-theme better-defaults))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(setq inhibit-startup-message t) ;; hide the startup message
(load-theme 'material t) ;; load material theme
(global-linum-mode t) ;; enable line numbers globally
(elpy-enable)
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode)
  )
(add-to-list 'auto-mode-alist '("\\.yaml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))
(add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)
(add-hook 'after-init-hook 'global-company-mode)
(add-hook 'php-mode-hook
            '(lambda ()
               (auto-complete-mode t)
               (require 'ac-php)
               (setq ac-sources  '(ac-source-php ) )
               (yas-global-mode 1)
               (ac-php-core-eldoc-setup ) ;; enable eldoc

               (define-key php-mode-map  (kbd "C-]") 'ac-php-find-symbol-at-point)   ;goto define
               (define-key php-mode-map  (kbd "C-t") 'ac-php-location-stack-back)    ;go back
               ))
(add-hook 'ruby-mode-hook 'robe-mode)
(eval-after-load 'company '(push 'company-robe company-backends))
(add-to-list 'company-backends 'company-c-headers)
(add-to-list 'auto-mode-alist '("\\.rs\\'" . rust-mode))
(global-set-key [f8] 'neotree-toggle)
(projectile-mode)
;; Magit
(global-set-key (kbd "C-x g") 'magit-status)
(setq tramp-default-method "ssh")
(require 'ssh)
(setq make-backup-files nil) ; stop creating backup~ files
(setq auto-save-default nil) ; stop creating #autosave# files
(setq company-idle-delay 0)
(setq company-dabbrev-downcase 0)
(setq company-minimum-prefix-length 2)
(setq company-show-numbers "on")
(setq company-selection-wrap-around "on")
(helm-mode 1)
(company-quickhelp-mode 1)
(setq company-quickhelp-delay nil)

(setq path-to-ctags "/usr/bin/ctags")
(defun create-tags (dir-name)
    "Create tags file."
    (interactive "DDirectory: ")
    (shell-command
     (format "%s -f TAGS -e -R %s" path-to-ctags (directory-file-name dir-name)))
  )
(global-whitespace-mode nil) ;; activate
'(whitespace-empty ((t nil)))
'(whitespace-hspace ((t (:foreground "DarkOrange4"))))
'(whitespace-indentation ((t (:foreground "gray25"))))
'(whitespace-line ((t (:underline (:color "DarkOrange4" :style wave)))))
'(whitespace-newline ((t (:foreground "gray25"))))
'(whitespace-space ((t (:foreground "gray25"))))
'(whitespace-space-after-tab ((t (:foreground "DarkOrange4"))))
'(whitespace-space-before-tab ((t (:background "DarkOrange4" :foreground "DarkOrange4"))))
'(whitespace-tab ((t (:foreground "gray25"))))
'(whitespace-trailing ((t (:foreground "DarkOrange4"))))
