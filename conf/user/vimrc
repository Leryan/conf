" mkdir -p ~/.vim/{autoload,bundle}
" cd ~/.vim/bundle
"
" git clone https://github.com/tpope/vim-pathogen
" ln -s ~/.vim/bundle/vim-pathogen/autoload/pathogen.vim ~/.vim/autoload/pathogen.vim
"
" git clone --recursive https://github.com/davidhalter/jedi-vim.git
" git clone --depth=1 https://github.com/vim-syntastic/syntastic.git
" git clone https://github.com/tpope/vim-fugitive.git
" git clone https://github.com/fatih/vim-go.git
" git clone https://github.com/scrooloose/nerdtree.git
" git clone https://github.com/ctrlpvim/ctrlp.vim
" git clone https://github.com/Valloric/YouCompleteMe
"
" cd YouCompleteMe
" git submodule update --recursive --init
" ./install.py --clang-completer --system-libclang --go-completer --rust-completer
"
" Ready!

execute pathogen#infect()

let g:acp_enableAtStartup = 1

inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs = 1
let g:syntastic_go_checkers = ['golint', 'govet', 'go']

" disable sign column if no error reported
set signcolumn=yes

let g:go_metalinter_autosave = 0
let g:go_metalinter_autosave_enabled = []
let g:go_fmt_command = "goimports"
let g:go_gocode_unimported_packages = 1
let g:go_template_use_pkg = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_list_type = "quickfix"

let g:racer_experimental_completer = 1

let g:ycm_min_num_of_chars_for_completion = 1
let g:ycm_max_num_candidates = 10
let g:ycm_complete_in_comments = 1

map <C-n> :NERDTreeToggle<CR>

autocmd FileType go map <F2> :GoRename 
autocmd FileType go map <F3> :GoTestFunc<CR>
autocmd FileType go map <F4> :GoCoverageToggle<CR>

set hidden
set number
set background=dark
set expandtab
set tabstop=4
set shiftwidth=4
set nobackup
set ignorecase
set smarttab
set softtabstop=4
set wildmenu
set wildmode=longest:list
set modeline
set laststatus=2
set cc=79
set nolist
"set linebreak
set formatoptions+=1
set hlsearch
set ruler
set showcmd
set incsearch
set nocompatible
set backspace=indent,eol,start
filetype plugin indent on
syntax on
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
